
import pandas
import numpy

import sys


# In[2]:

if len(sys.argv) != 3:
	print("Please provide relative or absolute <path_of_train_data>Â and <path_of_test_data> as command line arguments.")
	sys.exit()
train_path = sys.argv[1]
test_path = sys.argv[2]

# test_data_df = pandas.read_json('../Music_reviews_json/reviews_Digital_Music_5.json/Music_Review_test.json', lines=True)
try:
	test_data_df = pandas.read_json(test_path, lines=True)
except:
	print("Error: Incorrect path for data")
	sys.exit()

test_labels = test_data_df["overall"].to_numpy()

print("\nLoading Cached Test Prediction (generated by 1(a))...")
test_prediction = numpy.loadtxt('1_a_test_prediction.csv', delimiter=',')

num_classes = 5

# Confusion Matrix

confusion_matrix = numpy.empty((num_classes, num_classes), dtype=numpy.int64)
for i in range(num_classes):
    label_i_mask = (test_labels==(i+1))
    for j in range(num_classes):
        predicted_j_actual_i = (test_prediction[label_i_mask]==(j+1))        
        # confusion_matrix[i,j] = no. of examples of actual class (i+1) predicted as class (j+1)
        confusion_matrix[i,j] = numpy.count_nonzero(predicted_j_actual_i)
print("Confusion Matrix: (i,j) th value represents no. of examples of actual class (i+1) predicted as class (j+1)")        
print(confusion_matrix)
